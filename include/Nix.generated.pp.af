PP-Table([PP-Entry(Path1("Var"),[Arg("1")]),PP-Entry(Path1("Int"),[Arg("1")]),PP-Entry(Path1("Uri"),[Arg("1")]),PP-Entry(Path1("Path"),[Arg("1")]),PP-Entry(Path1("List"),[FBOX(KW,S("\"[\"")),Arg("1"),FBOX(KW,S("\"]\""))]),PP-Entry(Path1("ExprNil"),[]),PP-Entry(Path1("ExprCons"),[Arg("1"),Arg("2")]),PP-Entry(Path1("Assert"),[FBOX(KW,S("\"assert\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2")]),PP-Entry(Path1("With"),[FBOX(KW,S("\"with\"")),Arg("1"),FBOX(KW,S("\";\"")),Arg("2")]),PP-Entry(Path1("Let"),[FBOX(KW,S("\"let\"")),Arg("1"),FBOX(KW,S("\"in\"")),Arg("2")]),PP-Entry(Path("Let",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("LetRec"),[FBOX(KW,S("\"let\"")),FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("LetRec",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("AttributeSet"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"{\"")),Arg("1")])],FBOX(KW,S("\"}\""))])),PP-Entry(Path("AttributeSet",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("RecAttributeSet"),[FBOX(KW,S("\"rec\"")),FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\""))]),PP-Entry(Path("RecAttributeSet",[selector("1","iter-star")]),[Arg("1")]),PP-Entry(Path1("Bind"),[Arg("1"),FBOX(KW,S("\"=\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("Bind",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\".\""))]),PP-Entry(Path1("Inherit"),V([],[[V([SOpt(VS,"2")],[FBOX(KW,S("\"inherit\"")),Arg("1")])],FBOX(KW,S("\";\""))])),PP-Entry(Path("Inherit",[selector("1","iter")]),[Arg("1")]),PP-Entry(Path1("InheritFrom"),[FBOX(KW,S("\"inherit\"")),FBOX(KW,S("\"(\"")),Arg("1"),FBOX(KW,S("\")\"")),Arg("2"),FBOX(KW,S("\";\""))]),PP-Entry(Path("InheritFrom",[selector("2","iter")]),[Arg("1")]),PP-Entry(Path1("Call"),[Arg("1"),Arg("2")]),PP-Entry(Path1("Function"),[Arg("1"),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path1("Function"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\"")),FBOX(KW,S("\":\"")),Arg("2")]),PP-Entry(Path("Function",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Function"),[Arg("1"),FBOX(KW,S("\"@\"")),FBOX(KW,S("\"{\"")),Arg("2"),FBOX(KW,S("\"}\"")),FBOX(KW,S("\":\"")),Arg("3")]),PP-Entry(Path("Function",[selector("2","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Function"),[FBOX(KW,S("\"{\"")),Arg("1"),FBOX(KW,S("\"}\"")),FBOX(KW,S("\"@\"")),Arg("2"),FBOX(KW,S("\":\"")),Arg("3")]),PP-Entry(Path("Function",[selector("1","iter-sep")]),[Arg("1"),FBOX(KW,S("\",\""))]),PP-Entry(Path1("Arg"),[Arg("1")]),PP-Entry(Path1("ArgDefault"),[Arg("1"),FBOX(KW,S("\"?\"")),Arg("2")]),PP-Entry(Path1("ArgEllipsis"),[FBOX(KW,S("\"...\""))]),PP-Entry(Path1("Select"),[Arg("1"),FBOX(KW,S("\".\"")),Arg("2")]),PP-Entry(Path1("If"),[FBOX(KW,S("\"if\"")),Arg("1"),FBOX(KW,S("\"then\"")),Arg("2"),FBOX(KW,S("\"else\"")),Arg("3")]),PP-Entry(Path1("Eq"),[Arg("1"),FBOX(KW,S("\"==\"")),Arg("2")]),PP-Entry(Path1("NEq"),[Arg("1"),FBOX(KW,S("\"!=\"")),Arg("2")]),PP-Entry(Path1("Not"),[FBOX(KW,S("\"!\"")),Arg("1")]),PP-Entry(Path1("And"),[Arg("1"),FBOX(KW,S("\"&&\"")),Arg("2")]),PP-Entry(Path1("Or"),[Arg("1"),FBOX(KW,S("\"||\"")),Arg("2")]),PP-Entry(Path1("Impl"),[Arg("1"),FBOX(KW,S("\"->\"")),Arg("2")]),PP-Entry(Path1("Update"),[Arg("1"),FBOX(KW,S("\"//\"")),Arg("2")]),PP-Entry(Path1("HasAttr"),[Arg("1"),FBOX(KW,S("\"?\"")),Arg("2")]),PP-Entry(Path1("Plus"),[Arg("1"),FBOX(KW,S("\"+\"")),Arg("2")]),PP-Entry(Path1("Concat"),[Arg("1"),FBOX(KW,S("\"++\"")),Arg("2")])])