Module("Nix.main.packed",Imports([Import("Nix.main"),Import("Nix-Builders"),Import("Nix-Colorer"),Import("Nix-Completions"),Import("Nix-Folding"),Import("Nix-Outliner"),Import("Nix-References"),Import("Nix-Syntax"),Import("Nix-Builders.generated"),Import("Nix-Colorer.generated"),Import("Nix-Completions.generated"),Import("Nix-Folding.generated"),Import("Nix-Outliner.generated"),Import("Nix-References.generated")]),[Language(" General properties",[LanguageName("Nix"),LanguageId("Nix"),Extends(Values(["Root"])),Description(String("\"Spoofax/IMP-generated editor for the Nix language\"")),URL("http://strategoxt.org"),Extensions(Values(["nix"])),Table("include/Nix.tbl"),StartSymbols(Values(["Expr"]))]),Builders("",[SemanticObserver(Strategy("editor-analyze")),SemanticProvider("include/nix.ctree"),Builder(String("\"Show abstract syntax\""),Strategy("generate-aterm"),[OpenEditor,RealTime,Meta]),Builder(String("\"Create missing file\""),Strategy("generate-missing-file"),[OpenEditor,RealTime,Cursor]),Builder(String("\"Build attribute\""),Strategy("build-attribute"),[Cursor,RealTime]),Builder(String("\"Build top-level\""),Strategy("build-top-level"),[Cursor,RealTime])]),Colorer("",[ColorRule(ConstructorOnly(Constructor("Arg")),Attribute(ColorDefault,NoColor,ITALIC)),ColorRule(ConstructorOnly(Constructor("ArgDefault")),Attribute(ColorDefault,NoColor,ITALIC)),ColorRule(ConstructorOnly(Constructor("ArgEllipses")),Attribute(ColorDefault,NoColor,ITALIC))]),Colorer(" Default, token-based highlighting",[ColorRule(Token(TK_KEYWORD),Attribute(ColorRGB("127","0","85"),NoColor,BOLD)),ColorRule(Token(TK_IDENTIFIER),AttributeRef("default")),ColorRule(Token(TK_STRING),AttributeRef("blue")),ColorRule(Token(TK_NUMBER),AttributeRef("darkgreen")),ColorRule(Token(TK_VAR),Attribute(ColorRGB("255","0","100"),NoColor,ITALIC)),ColorRule(Token(TK_OPERATOR),Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorRule(Token(TK_LAYOUT),Attribute(ColorRGB("100","100","0"),NoColor,ITALIC))]),Colorer(" System colors",[ColorDef("darkred",Attribute(ColorRGB("128","0","0"),NoColor,NORMAL)),ColorDef("red",Attribute(ColorRGB("255","0","0"),NoColor,NORMAL)),ColorDef("darkgreen",Attribute(ColorRGB("0","128","0"),NoColor,NORMAL)),ColorDef("green",Attribute(ColorRGB("0","255","0"),NoColor,NORMAL)),ColorDef("darkblue",Attribute(ColorRGB("0","0","128"),NoColor,NORMAL)),ColorDef("blue",Attribute(ColorRGB("0","0","255"),NoColor,NORMAL)),ColorDef("cyan",Attribute(ColorRGB("0","255","255"),NoColor,NORMAL)),ColorDef("magenta",Attribute(ColorRGB("255","0","255"),NoColor,NORMAL)),ColorDef("yellow",Attribute(ColorRGB("255","255","0"),NoColor,NORMAL)),ColorDef("white",Attribute(ColorRGB("255","255","255"),NoColor,NORMAL)),ColorDef("black",Attribute(ColorRGB("0","0","0"),NoColor,NORMAL)),ColorDef("gray",Attribute(ColorRGB("128","128","128"),NoColor,NORMAL)),ColorDef("grey",AttributeRef("gray")),ColorDef("orange",Attribute(ColorRGB("255","165","0"),NoColor,NORMAL)),ColorDef("pink",Attribute(ColorRGB("255","105","180"),NoColor,NORMAL)),ColorDef("brown",Attribute(ColorRGB("139","69","19"),NoColor,NORMAL)),ColorDef("default",Attribute(ColorDefault,NoColor,NORMAL))]),Completions("",[CompletionTemplate(String("\"import \""),[Placeholder("<path>")],None),CompletionTemplate(String("\"inherit (\""),[Placeholder("<e>"),String("\") \""),Placeholder("<i>"),String("\";\"")],None),CompletionTemplate(String("\"inherit \""),[Placeholder("<i>"),String("\";\"")],None)]),Folding("",[FoldRule(ConstructorOnly(Constructor("List")),None),FoldRule(ConstructorOnly(Constructor("AttributeSet")),None),FoldRule(ConstructorOnly(Constructor("RecAttributeSet")),None)]),Folding(" Default folding definitions",[FoldRule(SortAndConstructor(Sort("Bind"),Constructor("Inherit")),None),FoldRule(SortAndConstructor(Sort("StringSQ"),Constructor("StringSQ")),None),FoldRule(SortAndConstructor(Sort("StringDQ"),Constructor("StringDQ")),None)]),Outliner(" Default outliner        ",[OutlineRule(SortAndConstructor(Sort("Bind"),Constructor("Bind"))),OutlineRule(SortAndConstructor(Sort("Bind"),Constructor("InheritFrom"))),OutlineRule(SortAndConstructor(Sort("Expr"),Constructor("Function"))),OutlineRule(SortAndConstructor(Sort("Expr"),Constructor("Function")))]),References("",[ReferenceRule("_",Strategy("editor-resolve"))]),Language("",[LineCommentPrefix(String("\"#\"")),BlockCommentDefs(BlockCommentDef(String("\"/*\""),"*",String("\"*/\""))),FenceDefs([FenceDef("[","]"),FenceDef("(",")"),FenceDef("{","}")]),IndentDefs([IndentDef(String("\"=\"")),IndentDef(String("\":\""))]),IdentifierLexical(String("\"[A-Za-z0-9_]+\""))])])